package com.pasantia.entidades;
// Generated 10/09/2013 10:40:59 AM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Producto generated by hbm2java
 */
@Entity
@Table(name="Producto"
    ,catalog="CasinoPasantia"
)
public class Producto  implements java.io.Serializable {


     private Integer idProducto;
     private Casino casino;
     private Categoria categoria;
     private PrecioCompra precioCompra;
     private Ubicacion ubicacion;
     private Tblunidad tblunidad;
     private String descripcion;
     private int cantidadActual;
     private long precioVenta1;
     private Long precioVenta2;
     private String codigoBarras;
     private int cantidadMinima;
     private String imagen;
     private Set tbldetalleVentas = new HashSet(0);
     private Set tbldetallepedidos = new HashSet(0);
     private Set tbldetallecompras = new HashSet(0);

    public Producto() {
    }

	
    public Producto(Casino casino, Categoria categoria, PrecioCompra precioCompra, Ubicacion ubicacion, Tblunidad tblunidad, String descripcion, int cantidadActual, long precioVenta1, String codigoBarras, int cantidadMinima) {
        this.casino = casino;
        this.categoria = categoria;
        this.precioCompra = precioCompra;
        this.ubicacion = ubicacion;
        this.tblunidad = tblunidad;
        this.descripcion = descripcion;
        this.cantidadActual = cantidadActual;
        this.precioVenta1 = precioVenta1;
        this.codigoBarras = codigoBarras;
        this.cantidadMinima = cantidadMinima;
    }
    public Producto(Casino casino, Categoria categoria, PrecioCompra precioCompra, Ubicacion ubicacion, Tblunidad tblunidad, String descripcion, int cantidadActual, long precioVenta1, Long precioVenta2, String codigoBarras, int cantidadMinima, String imagen, Set tbldetalleVentas, Set tbldetallepedidos, Set tbldetallecompras) {
       this.casino = casino;
       this.categoria = categoria;
       this.precioCompra = precioCompra;
       this.ubicacion = ubicacion;
       this.tblunidad = tblunidad;
       this.descripcion = descripcion;
       this.cantidadActual = cantidadActual;
       this.precioVenta1 = precioVenta1;
       this.precioVenta2 = precioVenta2;
       this.codigoBarras = codigoBarras;
       this.cantidadMinima = cantidadMinima;
       this.imagen = imagen;
       this.tbldetalleVentas = tbldetalleVentas;
       this.tbldetallepedidos = tbldetallepedidos;
       this.tbldetallecompras = tbldetallecompras;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="idProducto", unique=true, nullable=false)
    public Integer getIdProducto() {
        return this.idProducto;
    }
    
    public void setIdProducto(Integer idProducto) {
        this.idProducto = idProducto;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fk_id_casino", nullable=false)
    public Casino getCasino() {
        return this.casino;
    }
    
    public void setCasino(Casino casino) {
        this.casino = casino;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fk_id_categoria", nullable=false)
    public Categoria getCategoria() {
        return this.categoria;
    }
    
    public void setCategoria(Categoria categoria) {
        this.categoria = categoria;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fk_id_precio_compra", nullable=false)
    public PrecioCompra getPrecioCompra() {
        return this.precioCompra;
    }
    
    public void setPrecioCompra(PrecioCompra precioCompra) {
        this.precioCompra = precioCompra;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fk_id_ubicacion", nullable=false)
    public Ubicacion getUbicacion() {
        return this.ubicacion;
    }
    
    public void setUbicacion(Ubicacion ubicacion) {
        this.ubicacion = ubicacion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="secunidad", nullable=false)
    public Tblunidad getTblunidad() {
        return this.tblunidad;
    }
    
    public void setTblunidad(Tblunidad tblunidad) {
        this.tblunidad = tblunidad;
    }
    
    @Column(name="descripcion", nullable=false, length=45)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }
    
    @Column(name="cantidad_actual", nullable=false)
    public int getCantidadActual() {
        return this.cantidadActual;
    }
    
    public void setCantidadActual(int cantidadActual) {
        this.cantidadActual = cantidadActual;
    }
    
    @Column(name="precio_venta1", nullable=false, precision=10, scale=0)
    public long getPrecioVenta1() {
        return this.precioVenta1;
    }
    
    public void setPrecioVenta1(long precioVenta1) {
        this.precioVenta1 = precioVenta1;
    }
    
    @Column(name="precio_venta2", precision=10, scale=0)
    public Long getPrecioVenta2() {
        return this.precioVenta2;
    }
    
    public void setPrecioVenta2(Long precioVenta2) {
        this.precioVenta2 = precioVenta2;
    }
    
    @Column(name="codigo_barras", nullable=false, length=45)
    public String getCodigoBarras() {
        return this.codigoBarras;
    }
    
    public void setCodigoBarras(String codigoBarras) {
        this.codigoBarras = codigoBarras;
    }
    
    @Column(name="cantidad_minima", nullable=false)
    public int getCantidadMinima() {
        return this.cantidadMinima;
    }
    
    public void setCantidadMinima(int cantidadMinima) {
        this.cantidadMinima = cantidadMinima;
    }
    
    @Column(name="imagen")
    public String getImagen() {
        return this.imagen;
    }
    
    public void setImagen(String imagen) {
        this.imagen = imagen;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="producto")
    public Set getTbldetalleVentas() {
        return this.tbldetalleVentas;
    }
    
    public void setTbldetalleVentas(Set tbldetalleVentas) {
        this.tbldetalleVentas = tbldetalleVentas;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="producto")
    public Set getTbldetallepedidos() {
        return this.tbldetallepedidos;
    }
    
    public void setTbldetallepedidos(Set tbldetallepedidos) {
        this.tbldetallepedidos = tbldetallepedidos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="producto")
    public Set getTbldetallecompras() {
        return this.tbldetallecompras;
    }
    
    public void setTbldetallecompras(Set tbldetallecompras) {
        this.tbldetallecompras = tbldetallecompras;
    }




}



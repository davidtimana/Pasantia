package com.pasantia.entidades;
// Generated 6/10/2013 04:27:25 PM by Hibernate Tools 3.2.1.GA

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

/**
 * Producto generated by hbm2java
 */
@Entity
@Table(name = "Producto", catalog = "CasinoPasantia", uniqueConstraints = @UniqueConstraint(columnNames = "codigo_barras")
)
public class Producto implements java.io.Serializable {

    private static final long serialVersionUID = 6495500434092138273L;

    private Integer idProducto;
    private Casino casino;
    private Categoria categoria;
    private Ubicacion ubicacion;
    private Tblunidad tblunidad;
    private String descripcion;
    private Integer cantidadActual;
    private BigDecimal precioVenta1;
    private BigDecimal precioVenta2;
    private String codigoBarras;
    private Integer cantidadMinima;
    private String imagen;
    private Set tbldetalleVentas = new HashSet(0);
    private Set tbldetallepedidos = new HashSet(0);
    private Set tbldetallecompras = new HashSet(0);
    private Set precioCompras = new HashSet(0);

    // transient
    private BigDecimal cantidad;

    public Producto() {        
    }

    public Producto(Casino casino, Categoria categoria, Ubicacion ubicacion, Tblunidad tblunidad, String descripcion, Integer cantidadActual, BigDecimal precioVenta1, String codigoBarras, Integer cantidadMinima) {
        this.casino = casino;
        this.categoria = categoria;
        this.ubicacion = ubicacion;
        this.tblunidad = tblunidad;
        this.descripcion = descripcion;
        this.cantidadActual = cantidadActual;
        this.precioVenta1 = precioVenta1;
        this.codigoBarras = codigoBarras;
        this.cantidadMinima = cantidadMinima;
    }

    public Producto(Casino casino, Categoria categoria, Ubicacion ubicacion, Tblunidad tblunidad, String descripcion, Integer cantidadActual, BigDecimal precioVenta1, BigDecimal precioVenta2, String codigoBarras, Integer cantidadMinima, String imagen, Set tbldetalleVentas, Set tbldetallepedidos, Set tbldetallecompras, Set precioCompras) {
        this.casino = casino;
        this.categoria = categoria;
        this.ubicacion = ubicacion;
        this.tblunidad = tblunidad;
        this.descripcion = descripcion;
        this.cantidadActual = cantidadActual;
        this.precioVenta1 = precioVenta1;
        this.precioVenta2 = precioVenta2;
        this.codigoBarras = codigoBarras;
        this.cantidadMinima = cantidadMinima;
        this.imagen = imagen;
        this.tbldetalleVentas = tbldetalleVentas;
        this.tbldetallepedidos = tbldetallepedidos;
        this.tbldetallecompras = tbldetallecompras;
        this.precioCompras = precioCompras;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "idProducto", unique = true, nullable = false)
    public Integer getIdProducto() {
        return this.idProducto;
    }

    public void setIdProducto(Integer idProducto) {
        this.idProducto = idProducto;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "fk_id_casino", nullable = false)
    public Casino getCasino() {
        return this.casino;
    }

    public void setCasino(Casino casino) {
        this.casino = casino;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "fk_id_categoria", nullable = false)
    public Categoria getCategoria() {
        return this.categoria;
    }

    public void setCategoria(Categoria categoria) {
        this.categoria = categoria;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "fk_id_ubicacion", nullable = false)
    public Ubicacion getUbicacion() {
        return this.ubicacion;
    }

    public void setUbicacion(Ubicacion ubicacion) {
        this.ubicacion = ubicacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "secunidad", nullable = false)
    public Tblunidad getTblunidad() {
        return this.tblunidad;
    }

    public void setTblunidad(Tblunidad tblunidad) {
        this.tblunidad = tblunidad;
    }

    @Column(name = "descripcion", nullable = false, length = 100)
    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    @Column(name = "cantidad_actual", nullable = false)
    public Integer getCantidadActual() {
        return this.cantidadActual;
    }

    public void setCantidadActual(Integer cantidadActual) {
        this.cantidadActual = cantidadActual;
    }

    @Column(name = "precio_venta1", nullable = false, precision = 19, scale = 4)
    public BigDecimal getPrecioVenta1() {
        return this.precioVenta1;
    }

    public void setPrecioVenta1(BigDecimal precioVenta1) {
        this.precioVenta1 = precioVenta1;
    }

    @Column(name = "precio_venta2", precision = 19, scale = 4)
    public BigDecimal getPrecioVenta2() {
        return this.precioVenta2;
    }

    public void setPrecioVenta2(BigDecimal precioVenta2) {
        this.precioVenta2 = precioVenta2;
    }

    @Column(name = "codigo_barras", unique = true, nullable = false, length = 45)
    public String getCodigoBarras() {
        return this.codigoBarras;
    }

    public void setCodigoBarras(String codigoBarras) {
        this.codigoBarras = codigoBarras;
    }

    @Column(name = "cantidad_minima", nullable = false)
    public Integer getCantidadMinima() {
        return this.cantidadMinima;
    }

    public void setCantidadMinima(Integer cantidadMinima) {
        this.cantidadMinima = cantidadMinima;
    }

    @Column(name = "imagen")
    public String getImagen() {
        return this.imagen;
    }

    public void setImagen(String imagen) {
        this.imagen = imagen;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "producto")
    public Set getTbldetalleVentas() {
        return this.tbldetalleVentas;
    }

    public void setTbldetalleVentas(Set tbldetalleVentas) {
        this.tbldetalleVentas = tbldetalleVentas;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "producto")
    public Set getTbldetallepedidos() {
        return this.tbldetallepedidos;
    }

    public void setTbldetallepedidos(Set tbldetallepedidos) {
        this.tbldetallepedidos = tbldetallepedidos;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "producto")
    public Set getTbldetallecompras() {
        return this.tbldetallecompras;
    }

    public void setTbldetallecompras(Set tbldetallecompras) {
        this.tbldetallecompras = tbldetallecompras;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "producto")
    public Set getPrecioCompras() {
        return this.precioCompras;
    }

    public void setPrecioCompras(Set precioCompras) {
        this.precioCompras = precioCompras;
    }

    @Transient
    public BigDecimal getCantidad() {
        return cantidad;
    }

    public void setCantidad(BigDecimal cantidad) {
        this.cantidad = cantidad;
    }
}
